use serde::{Deserialize, Serialize};

#[repr(u8)]
#[derive(Copy, Clone, Debug, Hash, PartialEq, Serialize, Deserialize, Eq)]
pub enum OpCode {
    VOID = 0,
    PUSH = 1,
    LOOKUP = 2,
    IF = 3,
    JMP = 4,
    FUNC = 5,
    SCLOSURE = 6,
    ECLOSURE = 7,
    STRUCT = 8,
    POP = 9,
    BIND = 10,
    SDEF = 11,
    EDEF = 12,
    POP_PURE,
    PASS,
    PUSHCONST,
    NDEFS,
    PANIC,
    CLEAR,
    TAILCALL,
    SET,
    METALOOKUP,
    CALLCC,
    READLOCAL,
    SETLOCAL,
    READUPVALUE,
    SETUPVALUE,
    FILLUPVALUE,
    FILLLOCALUPVALUE,
    CLOSEUPVALUE, // Should be 1 for close, 0 for not
    TCOJMP,
    CALLGLOBAL,
    CALLGLOBALTAIL,
    LOADINT0, // Load const 0
    LOADINT1,
    LOADINT2,
    CGLOCALCONST,
    INNERSTRUCT,
    MOVEREADLOCAL,
    MOVEREADUPVALUE,
    MOVECGLOCALCONST,
    BEGINSCOPE,
    ENDSCOPE,
    LETENDSCOPE,
    PUREFUNC,
    FUNC0,
    ADD,
    SUB,
    MUL,
    DIV,
    EQUAL,
    LTE,
}

impl OpCode {
    // TODO better error handling here
    pub fn from_str(s: &str) -> Self {
        use OpCode::*;
        match s {
            "VOID" => VOID,
            "PUSH" => PUSH,
            "LOOKUP" => LOOKUP,
            "IF" => IF,
            "JMP" => JMP,
            "FUNC" => FUNC,
            "SCLOSURE" => SCLOSURE,
            "ECLOSURE" => ECLOSURE,
            "STRUCT" => STRUCT,
            "POP" => POP,
            "BIND" => BIND,
            "SDEF" => SDEF,
            "EDEF" => EDEF,
            "PASS" => PASS,
            "PUSHCONST" => PUSHCONST,
            "NDEFS" => NDEFS,
            "PANIC" => PANIC,
            "CLEAR" => CLEAR,
            "TAILCALL" => TAILCALL,
            "SET" => SET,
            "METALOOKUP" => METALOOKUP,
            "CALLCC" => CALLCC,
            "READLOCAL" => READLOCAL,
            "SETLOCAL" => SETLOCAL,
            "READUPVALUE" => READUPVALUE,
            "SETUPVALUE" => SETUPVALUE,
            "FILLUPVALUE" => FILLUPVALUE,
            "FILLLOCALUPVALUE" => FILLLOCALUPVALUE,
            "CLOSEUPVALUE" => CLOSEUPVALUE, // Should be 1 for close, 0 for not
            "TCOJMP" => TCOJMP,
            "CALLGLOBAL" => CALLGLOBAL,
            "CALLGLOBALTAIL" => CALLGLOBALTAIL,
            "LOADINT0" => LOADINT0, // Load const 0
            "LOADINT1" => LOADINT1,
            "LOADINT2" => LOADINT2,
            "CGLOCALCONST" => CGLOCALCONST,
            "INNERSTRUCT" => INNERSTRUCT,
            "MOVEREADLOCAL" => MOVEREADLOCAL,
            "MOVEREADUPVALUE" => MOVEREADUPVALUE,
            "MOVECGLOCALCONST" => MOVECGLOCALCONST,
            "BEGINSCOPE" => BEGINSCOPE,
            "ENDSCOPE" => ENDSCOPE,
            "FUNC0" => FUNC0,
            "ADD" => ADD,
            "SUB" => SUB,
            "MUL" => MUL,
            "DIV" => DIV,
            "EQUAL" => EQUAL,
            "LTE" => LTE,
            "LETENDSCOPE" => LETENDSCOPE,
            "PUREFUNC" => PUREFUNC,
            "POP_PURE" => POP_PURE,
            _ => panic!("Unable to map string to opcode"),
        }
    }
}
