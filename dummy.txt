0    BIND : 0     x
1    PUSH : 0     x
2    IF : 4
3    JMP : 6
4    PUSH : 0     10 <------- last instruction of then
5    JMP : 7
6    PUSH : 0     20 <------- last instruction of else
7    POP : 0         <------- last instruction


Tail Call Elimination

Find all JMPs that go to the last instruction


---------------------------------------------

Closure body:
0    BIND : 0     x
1    PUSH : 0     x
2    IF : 4
3    JMP : 8
4    PUSH : 0     x
5    PUSH : 0     test
6    FUNC : 1           <----- Turn THIS call into JMP 0
7    JMP : 9            <----- 
8    PUSH : 0     20    <----- last instruction of else
9    POP : 0            <----- last instruction


(define test1 (lambda (x) (if (= x 1000000) x (test1 (+ x 1)))))

(define test2 (lambda (x) (if (= x 1000000) x (test2 (i+ x 1)))))


(define test (lambda (x) (if (= x 10) x (test (+ x 1)))))


(define (fib n) (if (<= n 2) 1 (+ (fib (- n 1)) (fib (- n 2)))))


(define fib (lambda (n) (if (<= n 2) 1 (+ (fib (- n 1)) (fib (- n 2))))))


(define (test) (define (foo) (bar)) (define (bar) (foo)) (foo))

(define (test) (define (foo x) (bar x)) (define (bar x) (foo x)) (foo 1))

(define (test) (define (foo x y z) (bar x y z)) (define (bar x y z) (foo x y z)) (foo 1 2 3))









